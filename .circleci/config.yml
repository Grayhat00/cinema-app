version: 2.1

  jobs:
    build:
      docker:
        - image: circleci/node:14.5.0
      working_directory: ~/repo
      steps:
        - checkout
        - run:
            name: Show current branch
            command: echo ${CURRENT_BRANCH}
        - restore_chache:
            keys:
              - app-{{ checksum "package.json" }}
              - app-
        - run:
            name: Install yarn
            command: npm install
        - save_cache:
            path:
              - node_modules
            key: app-{{ checksum "package.json" }}

  deploy-to-aws-s3:
    docker:
      - image: circleci/node:14.5.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CURRENT_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: Build Project
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build successful"
      - run:
          name: Deploy to AWS S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete
            fi
  deploy-to-aws-cloudfront:
    docker:
      - image: circleci/node:14.5.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CURRENT_BRANCH}
      - run:
          name: Installing AWS CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: Build Project
          command: |
            npm install
            npm run build
            cd build
            zip ../build.zip -r * .[^.]*
            echo "Build successful"
      - run:
          name: Deploy to AWS Cloudfront
          command: |
            aws configure set preview.cloudfront
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\*
            fi

  workflows:
    build_and_deploy:
      jobs:
        - build
        - linting:
            requires:
              - build
            filters:
              branches:
                only:
                  - develop
                  - staging
                  - master
        - prettier:
            requires:
              - build
            filters:
              branches:
                only:
                  - develop
                  - staging
                  - master
        - unit-test:
            requires:
              - linting
              - prettier
            filters:
              branches:
                only:
                  - develop
                  - staging
                  - master
        - publish-to-docker-hub:
            requires:
              - unit-test
            filters:
              branches:
                only:
                  - develop
                  - staging
                  - master
        - deploy-to-aws-s3:
            requires:
              - publish-to-docker-hub
            filters:
              branches:
                only:
                  - develop
                  - staging
                  - master
        - deploy-to-aws-cloudfront:
            requires:
              - deploy-to-aws-s3
            filters:
              branches:
                only:
                  - develop
                  - staging
                  - master
        - notify-via-slack:
            requires:
              - deploy-to-aws-cloudfront
            filters:
              branches:
                only:
                  - develop
                  - staging
                  - master













#version: 2.1
#orbs:
#  node: circleci/node@1.1.6
#jobs:
#  build-and-test:
#    executor:
#      name: node/default
#    steps:
#      - checkout
#      - node/with-cache:
#          steps:
#            - run: npm install
#            - run: npm test
#workflows:
#    build-and-test:
#      jobs:
#        - build-and-test